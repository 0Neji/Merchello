@inherits Umbraco.Web.Mvc.UmbracoViewPage<Merchello.Bazaar.Models.Account.CustomerAddressModel>
@using System.Web.Mvc.Html
@using Merchello.Bazaar.Controllers
@using Merchello.Bazaar.Models
@using Merchello.Bazaar
@using Merchello.Core.Models
@using Umbraco.Web

@using (Html.BeginUmbracoForm<AccountOperationsController>("SaveCustomerAddress", null, new { @id = "addresses-form" }))
{

    <fieldset id="shipping-address">


        <div class="control-group">
            @Html.LabelFor(x => x.FullName, new { @class = "control-label" })
            @Html.ValidationMessageFor(x => x.FullName)
            <div class="controls">
                @Html.TextBoxFor(x => x.FullName, new { @placeholder = "Your full name", @class = "span10" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(x => x.Email, new { @class = "control-label" })
            @Html.ValidationMessageFor(x => x.Email)
            <div class="controls">
                @Html.TextBoxFor(x => x.Email, new {  @placeholder = "Your email address", @class = "span10" })
            </div>
        </div>


        <div class="control-group">
            @Html.LabelFor(x => x.Address1, new { @class = "control-label" })
            @Html.ValidationMessageFor(x => x.Address1)
            <div class="controls">
                @Html.TextBoxFor(x => x.Address1, new { @placeholder = "Address line 1", @class = "span10" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(x => x.Address2, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(x => x.Address2, new {  @placeholder = "Address line 2", @class = "span10" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(x => x.Locality, new { @class = "control-label" })
            @Html.ValidationMessageFor(x => x.Locality)
            <div class="controls">
                @Html.TextBoxFor(x => x.Locality, new { @placeholder = "Your locality or city", @class = "span10" })
            </div>
        </div>

        <div class="control-group">

            @Html.LabelFor(x => x.Region, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(x => x.Region, new { @placeholder = "Your region or province", @id = "shipping-province-entry", @data_addresstype = "shipping" })
                <select name="regionSelect" id="province-select" class="span8" data-addresstype="shipping"></select>
            </div>

        </div>
       
            <div class="control-group">
                @Html.LabelFor(x => x.CountryCode, new { @class = "control-label" })
                <div class="controls">
                    @if (Model.AddressType == "billing")
                    {
                        @Html.DropDownListFor(x => x.CountryCode, Model.AllCountries, new {  @class = "country-selection span10" })
                    }
                    else
                    {
                        @Html.DropDownListFor(x => x.CountryCode, Model.ShipCountries, new {  @class = "country-selection span10" })
                    }
                </div>
            </div>
      


        <div class="control-group">
            @Html.LabelFor(x => x.PostalCode, new { @class = "control-label" })
            @Html.ValidationMessageFor(x => x.PostalCode)
            <div class="controls">
                @Html.TextBoxFor(x => x.PostalCode, new { @placeholder = "Your postal code" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(x => x.Phone, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(x => x.Phone, new { @placeholder = "Your telephone number", @class = "span10" })
            </div>
        </div>
        
        @Html.HiddenFor(x => x.CustomerKey)
        @Html.HiddenFor(x => x.Key)

    </fieldset>

}