<?xml version="1.0"?>
<workflows>

  <strategies>
    <strategy alias="DefaultPackaging" type="Merchello.Core.Strategies.Packaging.DefaultWarehousePackagingStrategy, Merchello.Core" />
    <strategy alias="DefaultShipmentRateQuote" type="Merchello.Core.Gateways.Shipping.DefaultShipmentRateQuoteStrategy, Merchello.Core" />
    <strategy alias="DefaultInvoiceTaxRateQuote" type="Merchello.Core.Gateways.Taxation.FixedRate.FixedRateTaxCalculationStrategy, Merchello.Core" />
    <strategy alias="DefaultAnonymousBasketConversionStrategy" type="Merchello.Web.Workflow.BasketConversionByDiscardingPreviousCustomerBasket, Merchello.Web" />
    <!--strategy alias="DefaultAnonymousBasketConversionStrategy" type="Merchello.Web.Workflow.BasketConversionByCombiningAnonymousBasket, Merchello.Web" /-->
  </strategies>

  <taskChains>
    <taskChain alias="CheckoutManagerInvoiceCreate">
      <tasks>
        <task type="Merchello.Core.Chains.InvoiceCreation.CheckoutManager.AddBillingInfoToInvoiceTask, Merchello.Core" />
        <task type="Merchello.Core.Chains.InvoiceCreation.CheckoutManager.ConvertItemCacheItemsToInvoiceItemsTask, Merchello.Core" />
        <task type="Merchello.Web.Workflow.InvoiceCreation.CheckoutManager.AddCouponDiscountsToInvoiceTask, Merchello.Web" />
        <task type="Merchello.Core.Chains.InvoiceCreation.CheckoutManager.ApplyTaxesToInvoiceTask, Merchello.Core" />
        <task type="Merchello.Core.Chains.InvoiceCreation.CheckoutManager.ValidateCommonCurrency, Merchello.Core" />
        <task type="Merchello.Core.Chains.InvoiceCreation.CheckoutManager.AddInvoiceNumberPrefixTask, Merchello.Core" />
        <task type="Merchello.Web.Workflow.InvoiceCreation.CheckoutManager.AddNotesToInvoiceTask, Merchello.Web" />
      </tasks>
    </taskChain>
    <taskChain alias="OrderPreparationOrderCreate">
      <tasks>
        <task type="Merchello.Core.Chains.OrderCreation.ConvertInvoiceItemsToOrderItemsTask, Merchello.Core" />
      </tasks>
    </taskChain>
    <taskChain alias="OrderPreparationShipmentCreate">
      <tasks>
        <task type="Merchello.Core.Chains.ShipmentCreation.AddShippableOrderLineItemsToShipmentTask, Merchello.Core" />
        <task type="Merchello.Core.Chains.ShipmentCreation.RemoveShipmentOrderItemsFromInventoryAndPersistShipmentTask, Merchello.Core" />
        <task type="Merchello.Core.Chains.ShipmentCreation.SetOrderStatusTask, Merchello.Core" />
      </tasks>
    </taskChain>
    <!--
       Used to modify persisted data before returning to the UI
       -->
    <taskChain alias="MerchelloHelperProductDataModifiers">
      <tasks>
        <task type="Merchello.Web.DataModifiers.Product.IncludeTaxInProductPriceDataModifierTask, Merchello.Web" />
      </tasks>
    </taskChain>
    <taskChain alias="ItemCacheValidation">
      <!-- Added Merchello Version 1.11.0
      This chain validates basket and wish list items against values in the back office to assert that the customer has not
      added items to their basket that were subsequently changed in the back office prior to checkout.  The process is needed
      as the relation between the basket and wish list items are decoupled from the actual persisted values.
      -->
      <tasks>
        <task type="Merchello.Web.Validation.Tasks.ValidateProductsExistTask, Merchello.Web" />
        <!--
                The following task is intended to assert that pricing and/or on sale value has not changed in the back office since the
                customer has placed an item into their basket or wish list. If you have made custom pricing modifications in your
                implementation, you may either remove this task or adjust your code to add a new extended data value
                merchLineItemAllowsValidation = false
                to the line item so that it is skipped in the validation process.
            -->
        <task type="Merchello.Web.Validation.Tasks.ValidateProductPriceTask, Merchello.Web" />
        <!--
                Validates that products are still in inventory
            -->
        <task type="Merchello.Web.Validation.Tasks.ValidateProductInventoryTask, Merchello.Web" />
      </tasks>
    </taskChain>
    <taskChain alias="CopyProduct">
      <tasks>
        <task type="Merchello.Core.Chains.CopyEntity.Product.CopyProductOptionsTask, Merchello.Core" />
        <!-- we have to save here to generate the variants -->
        <task type="Merchello.Core.Chains.CopyEntity.Product.SaveProductCopyTask, Merchello.Core" />
        <task type="Merchello.Core.Chains.CopyEntity.Product.AddProductToWarehouseCatalogsTask, Merchello.Core" />
        <task type="Merchello.Core.Chains.CopyEntity.Product.MapProductVariantDataTask, Merchello.Core" />
        <task type="Merchello.Core.Chains.CopyEntity.Product.CopyProductCollectionsTask, Merchello.Core" />
        <task type="Merchello.Core.Chains.CopyEntity.Product.CopyDetachedContentTask, Merchello.Core" />
      </tasks>
    </taskChain>
  </taskChains>

</workflows>
